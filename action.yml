name: Stoneford Terraform Action
description: >
  This action runs Terraform for the Stoneford ecosystem. It can run various Terraform actions such as plan and  apply.
  It also supports running fmt and validate commands.

inputs:
  directory:
    description: The directory to run terraform in.
    required: true
  workspace:
    description: The name of the aws terraform workspace.
    required: true
  fmt:
    description: Whether to run terraform fmt.
    required: false
    default: 'false'
  validate:
    description: Whether to run terraform validate.
    required: false
    default: 'false'
  action:
    description: The terraform action to run.
    required: false
  account:
    description: The account name to run terraform in. Required if deployment_role is specified.
    required: false
  region:
    description: The region to run terraform in.
    required: false
    default: 'us-east-1'
  disable_backend:
    description: Whether to disable the terraform backend.
    required: false
    default: 'false'
  deployment_role:
    description: The deployment IAM role to use. If not provided, will skip configuring AWS.
    required: false
  tfvars_content:
    description: The content of the variable file to use.
    required: false

runs:
  using: composite

  steps:
    - name: Require account if deployment_role is provided
      if: inputs.deployment_role != ''
      shell: bash
      run: |
        if [ -z "${{ inputs.account }}" ]; then
          echo "account is required when deployment_role is provided"
          exit 1
        fi

    - name: Configure AWS credentials
      if: inputs.deployment_role != ''
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.deployment_role }}
        aws-region: ${{ inputs.region }}

    - name: Copy account specific tfvars
      env:
        SOURCE_FILE: ${{ inputs.directory }}/env/${{ inputs.account }}.tfvars
        DESTINATION_FILE: ${{ inputs.directory }}/env.auto.tfvars
      shell: bash
      run: |
        [-f "$SOURCE_FILE" ] && cp "${{env.SOURCE_FILE}}" "${{ env.DESTINATION_FILE }}"

    - uses: hashicorp/setup-terraform@v3

    - name: Terraform
      id: terraform
      uses: 7Factor/action-terraform@v3
      env:
        DISABLE_BACKEND: ${{ inputs.disable_backend == 'true' || inputs.deployment_role == '' || inputs.account == '' }}
        BACKEND_CONFIG_CONTENT: |
          bucket = "stoneford-${{ inputs.account }}-terraform-state"
          key    = "${{ inputs.region }}/terraform.tfstate"
          region = "${{ inputs.region }}"
      with:
        directory: ${{ inputs.directory }}
        workspace: ${{ inputs.workspace }}
        init-args: ${{ env.DISABLE_BACKEND == 'true' && '-backend=false' || '' }}
        fmt: ${{ inputs.fmt == 'true' }}
        validate: ${{ inputs.validate == 'true' }}
        action: ${{ inputs.action }}
        backend-file: ${{ github.action_path }}/backend/s3_backend.tf
        backend-config-content: ${{ env.DISABLE_BACKEND != 'true' && env.BACKEND_CONFIG_CONTENT || '' }}
        tfvars-content: ${{ inputs.tfvars_content }}
        comment-identifier: ${{ inputs.directory }}${{ inputs.account != '' && format(' - {0}', inputs.account) }}
        comment-header: |
          ### Terraform Results for ${{ inputs.directory }}${{ inputs.account != '' && format(' - {0}', inputs.account) }}
